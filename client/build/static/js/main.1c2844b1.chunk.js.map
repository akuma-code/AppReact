{"version":3,"sources":["utils/consts.js","Components/navbar/NavbarBTS.js","http/index.js","http/typesAPI.js","Components/modals/CreateType.js","pages/Admin.jsx","http/userAPI.js","pages/Auth.jsx","pages/Basket.jsx","Components/UI/ImgType.jsx","Components/OkItem.js","Components/OkList.js","Components/TypeBar.js","http/shopAPI.js","pages/Shop.jsx","pages/OknoPage.jsx","pages/Types.jsx","Components/modals/TypesTable.js","Components/tables/TableType.jsx","Components/Dblist.jsx","Components/modals/CreateShopPosition.js","pages/DBPage.jsx","routes.js","Components/AppRouter.js","App.js","store/OgoStore.js","store/UserStore.js","index.js"],"names":["ADMIN_ROUTE","LOGIN_ROUTE","REG_ROUTE","SHOP_ROUTE","OKNO_ROUTE","NavbarBT","observer","user","useContext","Context","history","useHistory","logout","setUser","setIsAuth","Navbar","bg","variant","Container","className","style","color","paddingLeft","fontSize","to","isAuth","Nav","Button","onClick","push","disabled","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","createType","type","a","post","data","console","log","fetchTypes","get","rows","fetchOneType","id","removeType","delete","CreateType","show","onHide","ogo","useEffect","then","setTypes","useState","currentType","setCurrentType","info","setInfo","file","setFile","changeInfo","key","value","number","map","i","Modal","centered","Header","closeButton","Title","Body","Form","Control","placeholder","onChange","e","target","files","selectFile","Row","Col","md","title","desc","filter","Date","now","Footer","form","FormData","append","JSON","stringify","Admin","registration","email","password","role","setItem","token","jwt_decode","message","login","check","Auth","location","useLocation","isLogin","pathname","setEmail","pass","setPass","clickHandler","alert","response","ApiError","height","window","innerHeight","Card","width","autoComplete","Basket","Imgtype","imgName","Image","fluid","src","OkItem","okitem","price","cursor","textAlign","border","img","OkList","items","item","TypeBar","ListGroup","displayName","types","ListGroupItem","active","selectedType","setSelectedType","name","size","createPosition","pos","fetchPositions","typeId","params","fetchOnePosition","removeShopPosition","Shop","setShop","shop","OknoPage","selType","setSelType","useParams","imgSrc","removeItem","alt","index","backgroundColor","Types","TypesTable","dbobjects","header","Table","striped","bordered","hover","dbitem","Item","keys","setKeys","Object","error","ind","createdAt","updatedAt","CreateShopPosition","setTypeId","setPrice","posName","setPosName","oktype","InputGroup","DropdownButton","Dropdown","click","FormControl","DBPage","typeVisible","setTypeVisible","tabVisible","setTabVisible","shopVisible","setShopVisible","StrictMode","lg","ButtonGroup","horizontal","authRoutes","path","Component","publicRoutes","AppRouter","component","exact","App","loading","setLoading","finally","Spinner","animation","OgoStore","this","_types","_amount","count","_shop","_type","_selectedType","makeAutoObservable","amount","UserStore","_isAuth","_user","bool","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.1c2844b1.chunk.js","sourcesContent":["export const ADMIN_ROUTE = '/admin';\r\nexport const LOGIN_ROUTE = '/login';\r\nexport const REG_ROUTE = '/reg';\r\nexport const AUTH_ROUTE = '/auth';\r\nexport const SHOP_ROUTE = '/';\r\nexport const BASKET_ROUTE = '/basket';\r\nexport const OKNO_ROUTE = '/okno';\r\nexport const OKTYPE_ROUTE = '/type';\r\nexport const DB_ROUTE = '/db';\r\n\r\n","import React, { useContext } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { ADMIN_ROUTE, AUTH_ROUTE, LOGIN_ROUTE, SHOP_ROUTE } from \"../../utils/consts\"\r\nimport { Navbar, Nav, Button, Container, Row } from 'react-bootstrap'\r\nimport { Context } from '../../index.js'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst NavbarBT = observer(() => {\r\n    const { user } = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    const logout = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\"  >\r\n            <Container>\r\n\r\n                <NavLink className=\"ml-0 container\" style={ { color: 'white', paddingLeft: 45, fontSize: '1.4em' } } to={ SHOP_ROUTE }\r\n                >\r\n                    СКЛАДСКИЕ ОСТАТКИ\r\n                </NavLink>\r\n\r\n                { user.isAuth ?\r\n                    <Container className=\"mr-auto\">\r\n                        <Nav >\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(ADMIN_ROUTE) }\r\n                                className=\"mr-0\"\r\n                            >Админка\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(LOGIN_ROUTE) }\r\n                                className=\"mr-5\"\r\n                            >Регистрация\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ logout }\r\n                                className=\"mr-5\"\r\n                            >Выход\r\n                            </Button>\r\n                        </Nav>\r\n                    </Container>\r\n                    : <Container className=\"mr-auto\">\r\n                        <Nav >\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(ADMIN_ROUTE) }\r\n                                className=\"mr-0\"\r\n                                disabled\r\n                            >Админка\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(LOGIN_ROUTE) }\r\n                                className=\"mr-5\"\r\n                            >Авторизация\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ logout }\r\n                                className=\"mr-5\"\r\n                            >Выход\r\n                            </Button>\r\n                        </Nav>\r\n                    </Container>\r\n                }\r\n            </Container>\r\n\r\n\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n)\r\nexport default NavbarBT","import axios from 'axios'\r\n\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n})\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n\r\n})\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`\r\n    return config\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\nexport {\r\n    $host, $authHost\r\n}","\r\nimport { $authHost, $host } from \"./index\";\r\n\r\nexport const createType = async (type) => {\r\n    const { data } = await $authHost.post('api/type', type)\r\n    console.log('created Type', data)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const { data } = await $host.get('api/type')\r\n    console.log('data[fetchTypes]', data)\r\n    return data.rows\r\n}\r\n\r\nexport const fetchOneType = async (id) => {\r\n    const { data } = await $host.get('api/type/' + id)\r\n    console.log('oneType', data);\r\n    return data\r\n}\r\nexport const removeType = async (id) => {\r\n    const { data } = await $host.delete('api/type/' + id)\r\n\r\n    return data\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Button, Dropdown, div, Container, Row, Col, FormControl } from 'react-bootstrap'\r\nimport { Context } from '../..'\r\nimport { createType, fetchTypes } from \"../../http/typesAPI\"\r\n\r\n\r\nconst CreateType = observer(({ show, onHide }) => {\r\n    const { ogo } = useContext(Context)\r\n    useEffect(() => {\r\n        fetchTypes().then(data => ogo.setTypes(data))\r\n    }, [])\r\n    const [currentType, setCurrentType] = useState(\"\");\r\n    const [info, setInfo] = useState([]);\r\n    const [file, setFile] = useState('')\r\n\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, { title: '', desc: '', number: Date.now() }])\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    const addOkType = () => {\r\n        const form = new FormData();\r\n        form.append('name', currentType)\r\n        form.append('img', file)\r\n        form.append('info', JSON.stringify(info))\r\n\r\n        createType(form).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить новый тип окна\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        className='mt-2 '\r\n                        placeholder=\"название типа\"\r\n                        value={ currentType }\r\n                        onChange={ (e) => setCurrentType(e.target.value) }\r\n                    />\r\n\r\n                    <Form.Control\r\n                        className='mt-2 custom-file-input'\r\n                        placeholder=\"изображение\"\r\n                        type='file'\r\n                        onChange={ (e) => selectFile(e) }\r\n                    />\r\n\r\n\r\n                    { info.map(i =>\r\n                        <Row className='mt-2'\r\n                            key={ i.number }>\r\n                            <Col md={ 3 }>\r\n                                <Form.Control\r\n                                    placeholder='название'\r\n                                    value={ i.title }\r\n                                    onChange={ (e) => changeInfo('title', e.target.value, i.number) }\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 3 }>\r\n                                <Form.Control\r\n                                    placeholder='описание'\r\n                                    value={ i.desc }\r\n                                    onChange={ (e) => changeInfo('desc', e.target.value, i.number) }\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 3 }>\r\n                                <Button\r\n                                    variant={ 'outline-dark' }\r\n                                    className='btn btn-danger'\r\n                                    onClick={ () => removeInfo(i.number) }\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ) }\r\n                    <Button\r\n                        className=\"w-100 mt-2 btn-secondary\"\r\n                        variant={ 'outline-dark' }\r\n                        onClick={ addInfo }\r\n                    >\r\n                        Добавить инфо\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className='d-flex justify-content-between'>\r\n                <Button\r\n                    className='btn btn-success'\r\n                    variant={ 'outline-dark' }\r\n                    onClick={ addOkType }\r\n                >Добавить</Button>\r\n                <Button onClick={ onHide }>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n})\r\n\r\nexport default CreateType","import React, { useState } from 'react'\r\nimport { Button, Container } from \"react-bootstrap\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport CreateType from \"../Components/modals/CreateType\"\r\nimport { DB_ROUTE } from '../utils/consts'\r\n\r\nconst Admin = () => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column mt-4\">\r\n\r\n            <Button\r\n                className=\"btn btn-danger mt-2\"\r\n                variant={ \"outline-dark\" }\r\n                onClick={ () => history.push(DB_ROUTE) }\r\n            >\r\n                Работа с БД\r\n            </Button>\r\n            <Button\r\n                className=\"btn btn-secondary mt-2\"\r\n                variant={ \"outline-dark\" }\r\n            >\r\n                Еще чето на всякий случай\r\n            </Button>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Admin","\r\nimport { $authHost, $host } from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const registration = async (email, password) => {\r\n    try {\r\n        const { data } = await $host.post('api/user/reg', { email, password, role: 'ADMIN' })\r\n        localStorage.setItem('token', data.token)\r\n        return jwt_decode(data.token)\r\n    } catch (error) {\r\n        console.log('######', error.message);\r\n    }\r\n\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $authHost.post('api/user/login', { email, password })\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    try {\r\n        console.log('check');\r\n        const { data } = await $authHost.get('api/user/auth')\r\n        localStorage.setItem('token', data.token)\r\n        return jwt_decode(data.token)\r\n    } catch (error) {\r\n        console.log('######', error.message);\r\n    }\r\n\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Card, Container, Form, Row } from \"react-bootstrap\"\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\"\r\nimport { login, registration } from '../http/userAPI'\r\nimport { LOGIN_ROUTE, REG_ROUTE, SHOP_ROUTE } from \"../utils/consts\"\r\nimport { Context } from '../index'\r\n\r\n\r\n\r\nconst Auth = observer(() => {\r\n    const location = useLocation()\r\n    const { user } = useContext(Context)\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    console.log(isLogin);\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('')\r\n\r\n    const clickHandler = async (email, pass) => {\r\n        let data\r\n\r\n        try {\r\n            if (isLogin) {\r\n                data = await login(email, pass)\r\n            } else {\r\n                data = await registration(email, pass)\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n            return data\r\n        } catch (e) {\r\n\r\n            alert(e.response.data.ApiError)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\"\r\n            style={{ height: window.innerHeight - 54 }}\r\n        >\r\n            <Card style={{ width: 600 }} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Войти' : 'Регистрация'}</h2>\r\n                <Form className=\"d-flex flex-column\"                >\r\n                    <Form.Control\r\n                        placeholder=\"input email\"\r\n                        className=\"mt-3\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        value={email}\r\n                        autoComplete=\"true\"\r\n                    />\r\n                    <Form.Control\r\n                        placeholder=\"input password\"\r\n                        className=\"mt-3\"\r\n                        type=\"password\"\r\n                        autoComplete=\"true\"\r\n                        onChange={(e) => setPass(e.target.value)}\r\n                        value={pass}\r\n                    />\r\n                    <Row className=\"d-flex mt-3 justify-content-between\" >\r\n                        <Button\r\n                            onClick={() => clickHandler(email, pass)}\r\n                            className=\"m-3 pr-3\"\r\n                            variant={\"outline-success\"}\r\n                        >\r\n                            {isLogin ? \"Войти\" : \"Зарегистрировать\"}\r\n                        </Button>\r\n                        <NavLink\r\n                            to={REG_ROUTE}\r\n                            className=\"mt-1\">\r\n                            {isLogin ? \"Регистрация нового пользователя\" : \"\"}\r\n                        </NavLink>\r\n                    </Row>\r\n                </Form>\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Auth","import React from 'react'\r\n\r\nconst Basket = () => {\r\n    return (\r\n        <div>Basket</div>\r\n    )\r\n}\r\n\r\nexport default Basket","import React from 'react';\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst Imgtype = ({ imgName }) => {\r\n    return (\r\n        <Image\r\n            fluid\r\n            src={ process.env.REACT_APP_API_URL + '/' + imgName }\r\n        />\r\n    );\r\n}\r\n\r\nexport default Imgtype;\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Col, Image } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { OKNO_ROUTE } from \"../utils/consts\"\r\nimport Imgtype from \"./UI/ImgType\"\r\n\r\n\r\nconst OkItem = observer(({ okitem }) => {\r\n    //! {okitem}={id, title, price, type}\r\n    const history = useHistory()\r\n    const { id, title, price, type } = okitem\r\n    return (\r\n        <Col className=\"mt-4\"\r\n            onClick={ () => history.push(OKNO_ROUTE + '/' + id) }\r\n        >\r\n            <Card\r\n                style={ { width: 200, cursor: \"pointer\", textAlign: \"center\" } }\r\n                border={ \"light\" }\r\n                className=\"d-flex  ml-1\"\r\n            >\r\n                <Imgtype\r\n                    imgName={ type && type.img } />\r\n                <div className=\"d-flex justify-content-center text-uppercase\" >\r\n                    <div style={ { fontSize: \"1.4em\" } }>{ title }</div>\r\n\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    )\r\n})\r\n\r\nexport default OkItem","import { observer } from \"mobx-react-lite\"\r\nimport React from 'react'\r\nimport { useContext, useState } from \"react\";\r\nimport { Container, ListGroup, Row } from \"react-bootstrap\";\r\nimport { Context } from \"..\";\r\nimport OkItem from \"./OkItem\";\r\n\r\nconst OkList = observer(({ items }) => {\r\n\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            { items && items.map(item =>\r\n                <OkItem\r\n                    key={ item.id }\r\n                    okitem={ item }\r\n                />\r\n            ) }\r\n        </Row>\r\n    )\r\n})\r\n\r\nexport default OkList","import { observer } from \"mobx-react-lite\"\r\nimport React, { useEffect } from 'react'\r\nimport { useContext } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\r\nimport { Context } from \"..\";\r\nimport { fetchTypes } from \"../http/typesAPI\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const { ogo } = useContext(Context);\r\n    useEffect(() => {\r\n        fetchTypes().then(data => ogo.setTypes(data))\r\n\r\n    }, []);\r\n    return (\r\n        <Container\r\n            className=\"my-4\"\r\n        >\r\n            <ListGroup style={ { textAlign: \"center\" } }>\r\n                <ListGroup.displayName>\r\n                    <h4>Типы изделий</h4>\r\n                </ListGroup.displayName>\r\n                { ogo.types.map(item =>\r\n                    <ListGroupItem\r\n                        className=\"mt-2\"\r\n                        style={ { cursor: \"pointer\", textAlign: \"center\" } }\r\n                        key={ item.id }\r\n                        active={ item.id === ogo.selectedType.id }\r\n                        onClick={ () => ogo.setSelectedType(item) }\r\n                    >\r\n                        { item.name }\r\n                    </ListGroupItem>\r\n                ) }\r\n            </ListGroup>\r\n            { ogo.types ? <Button\r\n                className=\"mt-2 btn-secondary\"\r\n                size={ \"sm\" }\r\n                style={ { cursor: \"pointer\", textAlign: \"center\" } }\r\n                onClick={ () => ogo.setSelectedType({}) }>\r\n                убрать сортировку\r\n            </Button>\r\n                :\r\n                \"\" }\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default TypeBar","\r\nimport { $authHost, $host } from \"./index\";\r\n\r\nexport const createPosition = async (pos) => {\r\n    const { data } = await $authHost.post('api/shop', pos)\r\n    console.log('created Position', data)\r\n    return data\r\n}\r\n\r\nexport const fetchPositions = async (typeId) => {\r\n    const { data } = await $host.get('api/shop', { params: { typeId } })\r\n    console.log('data[fetchPositions]', data)\r\n    return data.rows\r\n}\r\n\r\nexport const fetchOnePosition = async (id) => {\r\n    const { data } = await $host.get('api/shop/' + id)\r\n    console.log('data[OnePosition]', data)\r\n    if (!data) return {}\r\n    return data\r\n}\r\n\r\nexport const removeShopPosition = async (id) => {\r\n    const { data } = await $authHost.delete('api/shop/' + id)\r\n\r\n    return data\r\n}","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Col, Container, Row, Spinner } from \"react-bootstrap\"\r\nimport { Context } from '..'\r\nimport OkList from \"../Components/OkList\"\r\nimport TypeBar from \"../Components/TypeBar\"\r\nimport { fetchPositions } from \"../http/shopAPI\"\r\nimport { fetchTypes } from '../http/typesAPI'\r\n\r\nconst Shop = observer(() => {\r\n\r\n\r\n    const { ogo } = useContext(Context)\r\n\r\n    /** */\r\n    useEffect(() => {\r\n        fetchPositions().then(data => {\r\n            ogo.setShop(data)\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        fetchPositions(ogo.selectedType.id).then(data => {\r\n            ogo.setShop(data)\r\n        })\r\n    }, [ogo.selectedType])\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={ 2 }>\r\n                    <TypeBar />\r\n                </Col>\r\n                <Col md={ 7 } >\r\n                    <OkList items={ ogo.shop } />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Shop","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap'\r\nimport { Context } from '../index'\r\nimport { fetchTypes, fetchOneType } from '../http/typesAPI'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { fetchOnePosition, removeShopPosition } from \"../http/shopAPI\"\r\n\r\n\r\nconst OknoPage = observer(() => {\r\n    const { ogo } = useContext(Context)\r\n    const [item, setItem] = useState({ type: {} })\r\n    const [selType, setSelType] = useState({ info: [] })\r\n\r\n    const { id } = useParams()\r\n    const removeItem = (id) => {\r\n        removeShopPosition(id)\r\n    }\r\n    useEffect(() => {\r\n        fetchOnePosition(id).then(data => {\r\n            data && setItem(data)\r\n        })\r\n\r\n        fetchOneType(id).then(type => {\r\n            if (!type) setSelType({ info: [] })\r\n            setSelType(type)\r\n        })\r\n    }, [])\r\n    const imgSrc = item.type ? `${process.env.REACT_APP_API_URL}/${item.type.img}` : \"\"\r\n    return (\r\n        <Container\r\n            className=\"d-flex flex-column mt-2\"\r\n        >\r\n            <Button\r\n                variant={ \"danger\" }\r\n                onClick={ () => removeItem(id) }\r\n            >\r\n                Удалить позицию\r\n            </Button>\r\n            <Col md={ 4 }>\r\n                { imgSrc && <Image width={ 400 } src={ imgSrc } alt=\"NO IMAGE\" className=\"ml-0 mt-2\" /> }\r\n\r\n            </Col>\r\n            <Row\r\n                className=\"d-flex justify-content-between mt-1 mx-1 w-700\"\r\n            >\r\n                <Col md={ 5 } className=\"border border-primary\">\r\n                    <div className=\"d-flex flex-row  justify-content-between border mt-3\">\r\n                        <h2 className=\"border\">{ item.type && item.type.name }</h2>\r\n                        <h2 className=\"border\">{ item.price } руб.</h2>\r\n                    </div>\r\n                </Col>\r\n                <Col md={ 7 } className=\"border\">\r\n                    <div className=\"border border-dark p-1\">\r\n                        <div className=\"border border-warning\"><h4>Осталось на складе: ===</h4> </div>\r\n                        <div className=\"border border-warning\"><h4>В производстве: ===</h4></div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Card className=\"d-flex justify-content-around align-items-center\"\r\n            >\r\n                <h3>Описание</h3>\r\n                { selType && selType.info.map((info, index) =>\r\n                    <Row key={ info.id } style={ {\r\n                        backgroundColor: (index % 2 === 0) ? \"lightgray\" : \"darkgray\",\r\n                        width: \"90%\"\r\n                    } }\r\n                        className=\"ml-1\">\r\n                        { info.title }: { info.desc }\r\n                    </Row>\r\n                ) }\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default OknoPage","import React from 'react'\r\n\r\nconst Types = () => {\r\n    return (\r\n        <div>Types</div>\r\n    )\r\n}\r\n\r\nexport default Types","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Modal, Table, Button, Image } from \"react-bootstrap\";\r\nimport { Context } from \"../..\";\r\nimport { fetchTypes, removeType } from \"../../http/typesAPI\";\r\n\r\nconst TypesTable = observer(({ show, onHide }) => {\r\n    const [types, setTypes] = useState([]);\r\n    const [keys, setKeys] = useState([])\r\n    const { ogo } = useContext(Context);\r\n    useEffect(() => {\r\n        fetchTypes().then(data => {\r\n            data[0] && setKeys(Object.keys(data[0]))\r\n            ogo.setTypes(data)\r\n            setTypes(data)\r\n        },\r\n            (error) => console.log(error.message))\r\n    }, [])\r\n    useEffect(() => {\r\n        ogo.setTypes(types)\r\n\r\n    }, [types]);\r\n\r\n    const del = (id) => {\r\n        removeType(id)\r\n        fetchTypes().then(data => setTypes(data))\r\n        onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            size=\"xl\"\r\n            centered\r\n        >\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        { keys && keys.map((key, ind) => <th key={ ind }>{ key }</th>) }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { types.map((type, ind) =>\r\n                        <tr key={ ind }>\r\n                            <td>{ ind + 1 }</td>\r\n                            <td>{ type.id }</td>\r\n                            <td>{ type.name }</td>\r\n                            <td><Image height={ 50 } src={ process.env.REACT_APP_API_URL + '/' + type.img } /></td>\r\n                            <td>{ type.createdAt }</td>\r\n                            <td>{ type.updatedAt }</td>\r\n                            <td>\r\n                                <Button\r\n                                    onClick={ () => del(type.id) }\r\n                                    variant={ \"outline-danger\" }\r\n                                >Удалить</Button>\r\n                            </td>\r\n                        </tr>\r\n                    ) }\r\n                </tbody>\r\n            </Table>\r\n        </Modal>\r\n    );\r\n})\r\n\r\nexport default TypesTable;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Tabletype = observer(({ dbobjects, header }) => {\r\n    const mockType = {\r\n        \"id\": 7,\r\n        \"type\": \"OKNO 6\",\r\n        \"price\": 16800,\r\n        \"img\": \"82fc8c5e-bbce-40e3-88d9-084468a425c3.jpg\",\r\n        \"updatedAt\": \"2022-04-01T20:09:13.183Z\",\r\n        \"createdAt\": \"2022-04-01T20:09:13.183Z\",\r\n        \"shopId\": null\r\n    }\r\n    // const getProps = (type) => Object.keys(type).map(key => key.toString())\r\n    const [typekeys, setTypekeys] = useState([]);\r\n    // const header = getHeader(dbobjects)\r\n\r\n\r\n\r\n    return (\r\n        <Table striped bordered hover size=\"sm\" variant='dark'>\r\n            <thead>\r\n                <tr>\r\n                    {/* {typekeys.map(type =>\r\n                        <th key={type.id}>{type}</th>)} */}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            </tbody>\r\n        </Table>\r\n    );\r\n})\r\n\r\nexport default Tabletype;\r\n\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { ListGroup, Button, Container } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"..\";\r\nimport { fetchTypes, removeType } from \"../http/typesAPI\";\r\nimport { OKNO_ROUTE } from \"../utils/consts\";\r\nimport AkuToggleBtn from \"./buttons/Aku_ToggleBtn\";\r\nimport Tabletype from \"./tables/TableType\";\r\n\r\n\r\nconst Dblist = observer(({ dbitem }) => {\r\n\r\n    const history = useHistory()\r\n    const { ogo } = useContext(Context)\r\n    const [types, setTypes] = useState([])\r\n    const [checked, setChecked] = useState(false)\r\n    const [shop, setShop] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => ogo.setTypes(data))\r\n    }, [types])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        removeType(id)\r\n        fetchTypes().then(data => setTypes(data))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <ListGroup>\r\n            <ListGroup.Item className='d-flex flex-column'>\r\n                <ListGroup.displayName>\r\n                    Type ID: {dbitem.id}\r\n                </ListGroup.displayName>\r\n                <Button\r\n                    size=\"sm\"\r\n                    className=\"mt-1\"\r\n                    variant={\"outline-secondary\"}\r\n                    onClick={() => history.push(OKNO_ROUTE + '/' + dbitem.id)}\r\n                >Открыть\r\n                </Button>\r\n                <Button\r\n                    className=\"mt-1\"\r\n                    variant={\"outline-danger\"}\r\n                    onClick={() => deleteHandler(dbitem.id)}\r\n                >Удалить тип\r\n                </Button>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n    );\r\n})\r\n\r\nexport default Dblist;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { Button, Col, Dropdown, DropdownButton, Form, FormControl, InputGroup, Modal, Row } from \"react-bootstrap\";\r\nimport { createPosition } from \"../../http/shopAPI\";\r\nimport { fetchTypes, fetchOneType } from \"../../http/typesAPI\";\r\nimport { Context } from '../../index'\r\n\r\nconst CreateShopPosition = observer(({ show, onHide }) => {\r\n    const { ogo } = useContext(Context)\r\n    const [typeId, setTypeId] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [posName, setPosName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => {\r\n            ogo.setTypes(data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchOneType(typeId).then(oktype => {\r\n            ogo.setSelectedType(oktype)\r\n            setTypeId(oktype.id)\r\n            // setPosName(ogo.selectedType.name)\r\n        })\r\n    }, [posName])\r\n\r\n    const click = (type) => {\r\n        ogo.setSelectedType(type)\r\n        setTypeId(type.id)\r\n        setPosName(type.name)\r\n    }\r\n    const addNewPos = () => {\r\n        const form = new FormData();\r\n        form.append('typeId', typeId)\r\n        form.append('price', price)\r\n        form.append('title', posName)\r\n        createPosition(form).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить новое окно\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    {/* <Form.Select\r\n                        className='mt-2 '\r\n                        placeholder=\"название типа\"\r\n                        value={typeId }\r\n                        onChange={(e) => setTypeId(e.target.value)}\r\n                    >\r\n                        <option>Выберите тип окна</option>\r\n                        {ogo.types && ogo.types.map((type, ind) =>\r\n                            <option key={ind} value={type.id}\r\n                                onClick={() => ogo.setSelectedType(type)}\r\n                            >{type.name}</option>)}\r\n                    </Form.Select> */}\r\n                    <InputGroup className=\"mb-3\">\r\n                        <DropdownButton\r\n                            variant=\"outline-secondary\"\r\n                            title={ ogo.selectedType.name ? ogo.selectedType.name : \"укажите тип\" }\r\n                            value={ ogo.selectedType.name }\r\n                            id=\"input-group-dropdown-1\"\r\n                        >{ ogo.types && ogo.types.map(type =>\r\n                            <Dropdown.Item key={ type.id }\r\n                                onClick={ () => click(type) }\r\n                            >{ type.name }\r\n                            </Dropdown.Item>\r\n                        ) }\r\n                        </DropdownButton>\r\n                        <FormControl placeholder=\"название окна\"\r\n                            value={ posName }\r\n                            onChange={ (e) => setPosName(e.target.value) } />\r\n                    </InputGroup>\r\n                    <Form.Control\r\n                        className='mt-2 '\r\n                        placeholder=\"цена\"\r\n                        value={ price }\r\n                        type=\"number\"\r\n                        onChange={ (e) => setPrice(e.target.value) }\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className='d-flex justify-content-between'>\r\n                <Button\r\n                    className='btn btn-success'\r\n                    variant={ 'outline-dark' }\r\n                    onClick={ addNewPos }\r\n                >Добавить</Button>\r\n                <Button onClick={ onHide }>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n})\r\n\r\nexport default CreateShopPosition;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/app.css'\r\nimport { Badge, Button, ButtonGroup, Card, CardGroup, Col, Container, ListGroup, Row, ToggleButton } from 'react-bootstrap'\r\nimport { Context } from '..';\r\nimport { fetchTypes, removeType } from '../http/typesAPI';\r\nimport { OKNO_ROUTE } from \"../utils/consts\";\r\nimport Dblist from \"../Components/Dblist\";\r\nimport CreateType from \"../Components/modals/CreateType\";\r\nimport TypesTable from \"../Components/modals/TypesTable\";\r\nimport CreateShopPosition from \"../Components/modals/CreateShopPosition\";\r\n\r\n\r\nconst DBPage = observer(() => {\r\n    const history = useHistory()\r\n    const { ogo } = useContext(Context)\r\n    const [types, setTypes] = useState([])\r\n    const [checked, setChecked] = useState(false)\r\n    const [shop, setShop] = useState([])\r\n    const [typeVisible, setTypeVisible] = useState(false);\r\n    const [tabVisible, setTabVisible] = useState(false);\r\n    const [shopVisible, setShopVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => setTypes(data))\r\n\r\n    }, [ogo.types])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        removeType(id)\r\n        fetchTypes().then(data => setTypes(data))\r\n    }\r\n\r\n\r\n    return (\r\n        <React.StrictMode>\r\n            <Container className='d-flex mt-3'\r\n                fluid\r\n            >\r\n                <Row lg={1} className=\"border d-flex w-100 flex-wrap align-content-center\"\r\n                >\r\n                    <ButtonGroup\r\n                        horizontal=\"true\"\r\n                        className=\"mb-2\"\r\n                    >\r\n                        <Button\r\n                            className=\"btn  mt-2\"\r\n                            variant={\"outline-dark\"}\r\n                            onClick={() => setTabVisible(true)}\r\n                        >\r\n                            Таблица типов\r\n                        </Button>\r\n                        <Button\r\n                            className=\"btn  mt-2\"\r\n                            variant={\"outline-dark\"}\r\n                            onClick={() => setTypeVisible(true)}\r\n                        >\r\n                            Добавить новый тип\r\n                        </Button>\r\n                        <Button\r\n                            className=\"btn  mt-2\"\r\n                            variant={\"outline-dark\"}\r\n                            onClick={() => setShopVisible(true)}\r\n                        >\r\n                            Добавить новую позицию\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Row>\r\n                <Row md={4}\r\n                    className=\"d-flex justify-content-center\">\r\n\r\n\r\n                </Row>\r\n                <CreateType\r\n                    show={typeVisible}\r\n                    onHide={() => setTypeVisible(false)}\r\n                />\r\n                <TypesTable\r\n                    show={tabVisible}\r\n                    onHide={() => setTabVisible(false)}\r\n                />\r\n                <CreateShopPosition\r\n                    show={shopVisible}\r\n                    onHide={() => setShopVisible(false)}\r\n                />\r\n            </Container>\r\n        </React.StrictMode>\r\n    );\r\n\r\n    {/* <ListGroup>\r\n                        { ogo.types.map(typeItem =>\r\n                            <ListGroup.Item key={ typeItem.id } className='d-flex flex-column'>\r\n                                <div>\r\n                                    id: { typeItem.id }\r\n                                </div>\r\n                                <div>\r\n                                    type: { typeItem.type }\r\n                                </div>\r\n                                <AkuToggleBtn\r\n                                    clickHandler={ () => addToShop(typeItem) }\r\n\r\n                                    btnName='Добавить на главную'\r\n                                    props={ {\r\n                                        id: typeItem.id,\r\n                                        checked: checked\r\n                                    } }\r\n                                >\r\n\r\n                                </AkuToggleBtn>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    className=\"mt-1\"\r\n                                    variant={ \"outline-secondary\" }\r\n                                    onClick={ () => history.push(OKNO_ROUTE + '/' + typeItem.id) }\r\n                                >Открыть\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"mt-1\"\r\n                                    variant={ \"outline-danger\" }\r\n                                    onClick={ () => deleteHandler(typeItem.id) }\r\n                                >Удалить тип\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        ) }\r\n                    </ListGroup> */}\r\n\r\n})\r\n\r\nexport default DBPage;\r\n","import Admin from \"./pages/Admin\"\r\nimport Auth from \"./pages/Auth\"\r\nimport Basket from \"./pages/Basket\"\r\nimport Shop from \"./pages/Shop\"\r\nimport Login from \"./pages/Login\"\r\nimport { ADMIN_ROUTE, SHOP_ROUTE, BASKET_ROUTE, AUTH_ROUTE, LOGIN_ROUTE, REG_ROUTE, OKNO_ROUTE, OKTYPE_ROUTE, DB_ROUTE } from \"./utils/consts\"\r\nimport OknoPage from \"./pages/OknoPage\"\r\nimport Types from \"./pages/Types\"\r\nimport DBPage from \"./pages/DBPage\"\r\n\r\nexport const authRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n    {\r\n        path: DB_ROUTE,\r\n        Component: DBPage\r\n    },\r\n    {\r\n        path: BASKET_ROUTE,\r\n        Component: Basket\r\n    },\r\n]\r\nexport const publicRoutes = [\r\n    {\r\n        path: SHOP_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: AUTH_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: REG_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: OKNO_ROUTE,\r\n        Component: OknoPage\r\n    },\r\n    {\r\n        path: OKNO_ROUTE + '/:id',\r\n        Component: OknoPage\r\n    },\r\n    {\r\n        path: OKTYPE_ROUTE,\r\n        Component: Types\r\n    },\r\n]\r\n","import React, { useContext } from 'react'\r\nimport { Route, Switch, NavLink, Link, Redirect } from 'react-router-dom'\r\nimport { Context } from \"../index\"\r\nimport { authRoutes, publicRoutes } from \"../routes\"\r\nimport { SHOP_ROUTE } from \"../utils/consts\"\r\n\r\nconst AppRouter = () => {\r\n    const { user } = useContext(Context)\r\n    return (\r\n        <Switch>\r\n\r\n            { user.isAuth && authRoutes.map(({ path, Component }) =>\r\n                <Route path={ path }\r\n                    component={ Component }\r\n                    key={ path }\r\n                    exact\r\n                />\r\n            ) }\r\n            { publicRoutes.map(({ path, Component }) =>\r\n                <Route path={ path }\r\n                    component={ Component }\r\n                    key={ path }\r\n                    exact\r\n                />\r\n            ) }\r\n            <Redirect to={ SHOP_ROUTE } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React, { useContext, useState, useEffect } from 'react';\r\nimport NavbarBT from \"./Components/navbar/NavbarBTS.js\";\r\nimport './styles/app.css'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRouter from \"./Components/AppRouter\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \".\";\r\nimport { check } from './http/userAPI'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst App = observer(() => {\r\n    const { user } = useContext(Context)\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(true)\r\n            user.setIsAuth(true)\r\n        }).finally(() => setLoading(false))\r\n\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner animation={ \"grow\" } />\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavbarBT />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n})\r\n\r\nexport default App","import { makeAutoObservable } from 'mobx'\r\n\r\n\r\nexport default class OgoStore {\r\n    constructor () {\r\n        this._types = []\r\n        this._amount = [\r\n            { id: 1, type: \"OK1\", count: 5 },\r\n            { id: 2, type: \"OK2\", count: 5 },\r\n            { id: 3, type: \"OK3\", count: 5 },\r\n\r\n        ]\r\n        this._shop = []\r\n        this._type = {}\r\n        this._selectedType = {}\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n    setType(type) {\r\n        this._type = type\r\n    }\r\n    setShop(type) {\r\n        this._shop = type\r\n    }\r\n    setAmount(amount) {\r\n        this._amount = amount\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get type() {\r\n        return this._type\r\n    }\r\n    get amount() {\r\n        return this._amount\r\n    }\r\n    get shop() {\r\n        return this._shop\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this._selectedType = type\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n\r\n\r\n}","import { makeAutoObservable } from 'mobx'\r\nimport { Context } from '..';\r\nimport { useContext } from 'react';\r\n\r\n\r\nexport default class UserStore {\r\n    constructor () {\r\n        this._isAuth = true\r\n        this._user = {}\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool\r\n    }\r\n    setUser(user) {\r\n        this._user = user\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth\r\n    }\r\n\r\n    get user() {\r\n        return this._user\r\n    }\r\n}","import React, { createContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport OgoStore from \"./store/OgoStore\";\r\nimport UserStore from \"./store/UserStore\";\r\n\r\nexport const Context = createContext(null)\r\n\r\nReactDOM.render(\r\n    <Context.Provider value={ {\r\n        user: new UserStore(),\r\n        ogo: new OgoStore()\r\n    } }>\r\n        <App />\r\n    </Context.Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}