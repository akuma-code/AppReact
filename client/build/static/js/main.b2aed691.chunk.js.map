{"version":3,"sources":["utils/consts.js","Components/navbar/NavbarBTS.js","http/index.js","http/typesAPI.js","Components/modals/CreateType.js","pages/Admin.jsx","http/userAPI.js","pages/Auth.jsx","pages/Basket.jsx","Components/OkItem.js","Components/OkList.js","Components/TypeBar.js","pages/Shop.jsx","pages/OknoPage.jsx","pages/Types.jsx","Components/buttons/Aku_ToggleBtn.jsx","pages/DBPage.jsx","routes.js","Components/AppRouter.js","App.js","store/OgoStore.js","store/UserStore.js","index.js"],"names":["ADMIN_ROUTE","LOGIN_ROUTE","REG_ROUTE","SHOP_ROUTE","OKNO_ROUTE","NavbarBT","observer","user","useContext","Context","history","useHistory","logout","setUser","setIsAuth","Navbar","bg","variant","Container","className","style","color","paddingLeft","fontSize","to","isAuth","Nav","Button","onClick","push","disabled","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","createType","type","a","console","log","post","data","fetchTypes","get","rows","fetchOneType","id","removeType","delete","CreateType","show","onHide","ogo","useEffect","then","setTypes","useState","currentType","setCurrentType","info","setInfo","price","setPrice","file","setFile","changeInfo","key","value","number","map","i","Modal","centered","Header","closeButton","Title","Body","Form","Control","placeholder","onChange","e","target","files","selectFile","Row","Col","md","title","desc","filter","Date","now","Footer","form","FormData","append","JSON","stringify","Admin","typeVisible","setTypeVisible","registration","email","password","role","setItem","token","jwt_decode","message","login","Auth","location","useLocation","isLogin","pathname","setEmail","pass","setPass","clickHandler","alert","response","ApiError","height","window","innerHeight","Card","width","autoComplete","Basket","OkItem","okitem","cursor","textAlign","border","Image","fluid","src","img","OkList","types","item","TypeBar","ListGroup","Item","active","selectedType","setSelectedType","Shop","OknoPage","useParams","index","backgroundColor","Types","AkuToggleBtn","props","btnName","checked","setChecked","ToggleButton","size","currentTarget","DBPage","dbList","setDbList","ButtonGroup","typeItem","setShop","authRoutes","publicRoutes","path","Component","AppRouter","component","exact","App","loading","setLoading","Spinner","animation","OgoStore","this","_types","_amount","count","_shop","_type","_selectedType","makeAutoObservable","amount","UserStore","_isAuth","_user","bool","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b2aed691.chunk.js","sourcesContent":["export const ADMIN_ROUTE = '/admin';\r\nexport const LOGIN_ROUTE = '/login';\r\nexport const REG_ROUTE = '/reg';\r\nexport const AUTH_ROUTE = '/auth';\r\nexport const SHOP_ROUTE = '/';\r\nexport const BASKET_ROUTE = '/basket';\r\nexport const OKNO_ROUTE = '/okno';\r\nexport const OKTYPE_ROUTE = '/type';\r\nexport const DB_ROUTE = '/db';\r\n\r\n","import React, { useContext } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { ADMIN_ROUTE, AUTH_ROUTE, LOGIN_ROUTE, SHOP_ROUTE } from \"../../utils/consts\"\r\nimport { Navbar, Nav, Button, Container, Row } from 'react-bootstrap'\r\nimport { Context } from '../../index.js'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst NavbarBT = observer(() => {\r\n    const { user } = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    const logout = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\"  >\r\n            <Container>\r\n\r\n                <NavLink className=\"ml-0 container\" style={ { color: 'white', paddingLeft: 45, fontSize: '1.4em' } } to={ SHOP_ROUTE }\r\n                >\r\n                    СКЛАДСКИЕ ОСТАТКИ\r\n                </NavLink>\r\n\r\n                { user.isAuth ?\r\n                    <Container className=\"mr-auto\">\r\n                        <Nav >\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(ADMIN_ROUTE) }\r\n                                className=\"mr-0\"\r\n                            >Админка\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(LOGIN_ROUTE) }\r\n                                className=\"mr-5\"\r\n                            >Регистрация\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ logout }\r\n                                className=\"mr-5\"\r\n                            >Выход\r\n                            </Button>\r\n                        </Nav>\r\n                    </Container>\r\n                    : <Container className=\"mr-auto\">\r\n                        <Nav >\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(ADMIN_ROUTE) }\r\n                                className=\"mr-0\"\r\n                                disabled\r\n                            >Админка\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ () => history.push(LOGIN_ROUTE) }\r\n                                className=\"mr-5\"\r\n                            >Авторизация\r\n                            </Button>\r\n                            <Button\r\n                                variant={ \"outline-light\" }\r\n                                onClick={ logout }\r\n                                className=\"mr-5\"\r\n                            >Выход\r\n                            </Button>\r\n                        </Nav>\r\n                    </Container>\r\n                }\r\n            </Container>\r\n\r\n\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n)\r\nexport default NavbarBT","import axios from 'axios'\r\n\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n})\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n\r\n})\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`\r\n    return config\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\nexport {\r\n    $host, $authHost\r\n}","\r\nimport { $authHost, $host } from \"./index\";\r\n\r\nexport const createType = async (type) => {\r\n    console.log('type', type)\r\n    const { data } = await $authHost.post('api/type', type)\r\n    console.log('created Type', data)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const { data } = await $host.get('api/type')\r\n    console.log('data[fetchTypes]', data)\r\n    return data.rows\r\n}\r\n\r\nexport const fetchOneType = async (id) => {\r\n    const { data } = await $host.get('api/type/' + id)\r\n    console.log('oneType', data);\r\n    return data\r\n}\r\nexport const removeType = async (id) => {\r\n    const { data } = await $host.delete('api/type/' + id)\r\n\r\n    return data\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Button, Dropdown, div, Container, Row, Col, FormControl } from 'react-bootstrap'\r\nimport { Context } from '../..'\r\nimport { createType, fetchTypes } from \"../../http/typesAPI\"\r\n\r\n\r\nconst CreateType = observer(({ show, onHide }) => {\r\n    const { ogo } = useContext(Context)\r\n    useEffect(() => {\r\n        fetchTypes().then(data => ogo.setTypes(data))\r\n    }, [])\r\n    const [currentType, setCurrentType] = useState(\"\");\r\n    const [info, setInfo] = useState([]);\r\n    const [price, setPrice] = useState('')\r\n    const [file, setFile] = useState('')\r\n\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, { title: '', desc: '', number: Date.now() }])\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    const addOkType = () => {\r\n        const form = new FormData();\r\n        form.append('type', currentType)\r\n        form.append('price', price)\r\n        form.append('img', file)\r\n        form.append('info', JSON.stringify(info))\r\n\r\n        createType(form).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить новый тип окна\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        className='mt-2 '\r\n                        placeholder=\"название типа\"\r\n                        value={ currentType }\r\n                        onChange={ (e) => setCurrentType(e.target.value) }\r\n                    />\r\n                    <Form.Control\r\n                        className='mt-2 '\r\n                        placeholder=\"цена\"\r\n                        value={ price }\r\n                        onChange={ (e) => setPrice(e.target.value) }\r\n                    />\r\n                    <Form.Control\r\n                        className='mt-2 custom-file-input'\r\n                        placeholder=\"изображение\"\r\n                        type='file'\r\n                        onChange={ (e) => selectFile(e) }\r\n                    />\r\n\r\n\r\n                    { info.map(i =>\r\n                        <Row className='mt-2'\r\n                            key={ i.number }>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    placeholder='название'\r\n                                    value={ i.title }\r\n                                    onChange={ (e) => changeInfo('title', e.target.value, i.number) }\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    placeholder='описание'\r\n                                    value={ i.desc }\r\n                                    onChange={ (e) => changeInfo('desc', e.target.value, i.number) }\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Button\r\n                                    variant={ 'outline-dark' }\r\n                                    className='btn btn-danger'\r\n                                    onClick={ () => removeInfo(i.number) }\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ) }\r\n                    <Button\r\n                        className=\"w-100 mt-2 btn-secondary\"\r\n                        variant={ 'outline-dark' }\r\n                        onClick={ addInfo }\r\n                    >\r\n                        Добавить инфо\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className='d-flex justify-content-between'>\r\n                <Button\r\n                    className='btn btn-success'\r\n                    variant={ 'outline-dark' }\r\n                    onClick={ addOkType }\r\n                >Добавить</Button>\r\n                <Button onClick={ onHide }>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n})\r\n\r\nexport default CreateType","import React, { useState } from 'react'\r\nimport { Button, Container } from \"react-bootstrap\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport CreateType from \"../Components/modals/CreateType\"\r\nimport { DB_ROUTE } from '../utils/consts'\r\n\r\nconst Admin = () => {\r\n    const history = useHistory()\r\n    const [typeVisible, setTypeVisible] = useState(false);\r\n    return (\r\n        <Container className=\"d-flex flex-column mt-4\">\r\n            <Button\r\n                className=\"btn btn-success mt-2\"\r\n                variant={\"outline-dark\"}\r\n                onClick={() => setTypeVisible(true)}\r\n            >\r\n                Добавить новый тип окна\r\n            </Button>\r\n            <Button\r\n                className=\"btn btn-danger mt-2\"\r\n                variant={\"outline-dark\"}\r\n                onClick={() => history.push(DB_ROUTE)}\r\n            >\r\n                Работа с БД\r\n            </Button>\r\n            <Button\r\n                className=\"btn btn-secondary mt-2\"\r\n                variant={\"outline-dark\"}\r\n            >\r\n                Еще чето на всякий случай\r\n            </Button>\r\n            <CreateType\r\n                show={typeVisible}\r\n                onHide={() => setTypeVisible(false)}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Admin","\r\nimport { $authHost, $host } from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const registration = async (email, password) => {\r\n    try {\r\n        const { data } = await $host.post('api/user/reg', { email, password, role: 'ADMIN' })\r\n        localStorage.setItem('token', data.token)\r\n        return jwt_decode(data.token)\r\n    } catch (error) {\r\n        console.log('######', error.message);\r\n    }\r\n\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $authHost.post('api/user/login', { email, password })\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    try {\r\n        console.log('check');\r\n        const { data } = await $authHost.get('api/user/auth')\r\n        localStorage.setItem('token', data.token)\r\n        return jwt_decode(data.token)\r\n    } catch (error) {\r\n        console.log('######', error.message);\r\n    }\r\n\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Card, Container, Form, Row } from \"react-bootstrap\"\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\"\r\nimport { login, registration } from '../http/userAPI'\r\nimport { LOGIN_ROUTE, REG_ROUTE, SHOP_ROUTE } from \"../utils/consts\"\r\nimport { Context } from '../index'\r\n\r\n\r\n\r\nconst Auth = observer(() => {\r\n    const location = useLocation()\r\n    const { user } = useContext(Context)\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    console.log(isLogin);\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('')\r\n\r\n    const clickHandler = async (email, pass) => {\r\n        let data\r\n\r\n        try {\r\n            if (isLogin) {\r\n                data = await login(email, pass)\r\n            } else {\r\n                data = await registration(email, pass)\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n            return data\r\n        } catch (e) {\r\n\r\n            alert(e.response.data.ApiError)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\"\r\n            style={{ height: window.innerHeight - 54 }}\r\n        >\r\n            <Card style={{ width: 600 }} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Войти' : 'Регистрация'}</h2>\r\n                <Form className=\"d-flex flex-column\"                >\r\n                    <Form.Control\r\n                        placeholder=\"input email\"\r\n                        className=\"mt-3\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        value={email}\r\n                        autoComplete=\"true\"\r\n                    />\r\n                    <Form.Control\r\n                        placeholder=\"input password\"\r\n                        className=\"mt-3\"\r\n                        type=\"password\"\r\n                        autoComplete=\"true\"\r\n                        onChange={(e) => setPass(e.target.value)}\r\n                        value={pass}\r\n                    />\r\n                    <Row className=\"d-flex mt-3 justify-content-between\" >\r\n                        <Button\r\n                            onClick={() => clickHandler(email, pass)}\r\n                            className=\"m-3 pr-3\"\r\n                            variant={\"outline-success\"}\r\n                        >\r\n                            {isLogin ? \"Войти\" : \"Зарегистрировать\"}\r\n                        </Button>\r\n                        <NavLink\r\n                            to={REG_ROUTE}\r\n                            className=\"mt-1\">\r\n                            {isLogin ? \"Регистрация нового пользователя\" : \"\"}\r\n                        </NavLink>\r\n                    </Row>\r\n                </Form>\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Auth","import React from 'react'\r\n\r\nconst Basket = () => {\r\n    return (\r\n        <div>Basket</div>\r\n    )\r\n}\r\n\r\nexport default Basket","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Col, Image } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { OKNO_ROUTE } from \"../utils/consts\"\r\n\r\nconst OkItem = observer(({ okitem }) => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Col className=\"mt-4\"\r\n            onClick={ () => history.push(OKNO_ROUTE + '/' + okitem.id) }\r\n\r\n        >\r\n            <Card\r\n                style={ { width: 200, cursor: \"pointer\", textAlign: \"center\" } }\r\n                border={ \"light\" }\r\n                className=\"d-flex  ml-1\"\r\n            >\r\n                <Image fluid height={ 200 } src={ process.env.REACT_APP_API_URL + '/' + okitem.img } />\r\n                <div className=\"d-flex justify-content-between\" >\r\n                    <div>{ okitem.type }</div>\r\n                    <div>{ okitem.price } rub</div>\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    )\r\n})\r\n\r\nexport default OkItem","import { observer } from \"mobx-react-lite\"\r\nimport React from 'react'\r\nimport { useContext, useState } from \"react\";\r\nimport { Container, ListGroup, Row } from \"react-bootstrap\";\r\nimport { Context } from \"..\";\r\nimport OkItem from \"./OkItem\";\r\n\r\nconst OkList = observer(() => {\r\n    const { ogo } = useContext(Context);\r\n    const [shop, setShop] = useState([]);\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {ogo.types.map(item =>\r\n                <OkItem\r\n                    key={item.id}\r\n                    okitem={item}\r\n\r\n                />\r\n            )}\r\n        </Row>\r\n    )\r\n})\r\n\r\nexport default OkList","import { observer } from \"mobx-react-lite\"\r\nimport React from 'react'\r\nimport { useContext } from \"react\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\nimport { Context } from \"..\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const { ogo } = useContext(Context);\r\n\r\n    return (\r\n        <Container\r\n            className=\"mt-4\"\r\n        >\r\n            <ListGroup>\r\n                {ogo.types.map(item =>\r\n                    <ListGroup.Item\r\n                        className=\"mt-2\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        key={item.id}\r\n                        active={item.id === ogo.selectedType.id}\r\n                        onClick={() => ogo.setSelectedType(item)}\r\n                    >\r\n                        {item.type} - {item.price} руб.\r\n                    </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default TypeBar","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Col, Container, Row, Spinner } from \"react-bootstrap\"\r\nimport { Context } from '..'\r\nimport OkList from \"../Components/OkList\"\r\nimport TypeBar from \"../Components/TypeBar\"\r\nimport { fetchTypes } from '../http/typesAPI'\r\n\r\nconst Shop = observer(() => {\r\n\r\n\r\n    const { ogo } = useContext(Context)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => ogo.setTypes(data))\r\n    }, [])\r\n    console.log('ogo', ogo);\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <TypeBar />\r\n                </Col>\r\n                <Col\r\n                    md={2}\r\n\r\n                >\r\n                    <OkList />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Shop","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Card, Col, Container, Image, Row } from 'react-bootstrap'\r\nimport { Context } from '../index'\r\nimport { fetchTypes, fetchOneType } from '../http/typesAPI'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\n\r\nconst OknoPage = observer(() => {\r\n\r\n    const [item, setItem] = useState({ info: [] })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchOneType(id).then(data => setItem(data))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex flex-column mt-2\"\r\n        >\r\n            <Col md={4}>\r\n                <Image width={400} src={process.env.REACT_APP_API_URL + '/' + item.img} className=\"ml-0 mt-2\" />\r\n            </Col>\r\n            <Row\r\n                className=\"d-flex justify-content-between mt-1 mx-1 w-700\"\r\n            >\r\n                <Col md={5} className=\"border border-primary\">\r\n                    <div className=\"d-flex flex-row  justify-content-between border mt-3\">\r\n                        <h2 className=\"border\">{item.type}</h2>\r\n                        <h2 className=\"border\">{item.price} руб.</h2>\r\n                    </div>\r\n                </Col>\r\n                <Col md={7} className=\"border\">\r\n                    <div className=\"border border-dark p-1\">\r\n                        <div className=\"border border-warning\"><h4>Осталось на складе: ===</h4> </div>\r\n                        <div className=\"border border-warning\"><h4>В производстве: ===</h4></div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Card className=\"d-flex justify-content-around align-items-center\"\r\n            >\r\n                <h3>Описание</h3>\r\n                {item.info.map((info, index) =>\r\n                    <Row key={info.id} style={{\r\n                        backgroundColor: (index % 2 === 0) ? \"lightgray\" : \"darkgray\",\r\n                        width: \"90%\"\r\n                    }}\r\n                        className=\"ml-1\">\r\n                        {info.title}: {info.desc}\r\n                    </Row>\r\n                )}\r\n            </Card>\r\n        </Container>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default OknoPage","import React from 'react'\r\n\r\nconst Types = () => {\r\n    return (\r\n        <div>Types</div>\r\n    )\r\n}\r\n\r\nexport default Types","import React, { useState, useContext } from 'react';\r\nimport { ToggleButton } from \"react-bootstrap\";\r\n\r\nconst AkuToggleBtn = ({ props, clickHandler, btnName }) => {\r\n\r\n\r\n    const [checked, setChecked] = useState(props.checked);\r\n\r\n    return (\r\n\r\n        <ToggleButton\r\n            { ...props }\r\n            type=\"checkbox\"\r\n            checked={ checked }\r\n            size=\"sm\"\r\n            className=\"mt-1\"\r\n            value={ \"1\" }\r\n            variant={ \"outline-primary\" }\r\n            onChange={ (e) => setChecked(e.currentTarget.checked) }\r\n            onClick={ clickHandler }\r\n        >\r\n            { checked ? \"Добавлено\" : btnName }\r\n        </ToggleButton>\r\n    );\r\n}\r\n\r\nexport default AkuToggleBtn;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/app.css'\r\nimport { Button, ButtonGroup, Col, Container, ListGroup, Row, ToggleButton } from 'react-bootstrap'\r\nimport { Context } from '..';\r\nimport { fetchTypes, removeType } from '../http/typesAPI';\r\nimport { OKNO_ROUTE } from \"../utils/consts\";\r\nimport AkuToggleBtn from \"../Components/buttons/Aku_ToggleBtn\";\r\n\r\nconst DBPage = observer(() => {\r\n    const history = useHistory()\r\n    const { ogo } = useContext(Context)\r\n    const [dbList, setDbList] = useState([])\r\n    const [checked, setChecked] = useState(false)\r\n    const [shop, setShop] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => ogo.setTypes(data))\r\n    }, [dbList])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        removeType(id)\r\n        fetchTypes().then(data => setDbList(data))\r\n    }\r\n\r\n    const addToShop = (item) => {\r\n        ogo.setShop(item)\r\n\r\n\r\n    }\r\n    const destruct = (item) => Object.entries(...item)\r\n    return (\r\n        <Container className='d-flex mt-2'>\r\n            <Row>\r\n                <Col>\r\n                    <ButtonGroup>\r\n                        <Button\r\n                            onClick={() => fetchTypes().then(data => setDbList(data))}\r\n                        >\r\n                            Получить данные из БД\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Col>\r\n                <Col>\r\n                    <ListGroup>\r\n                        {ogo.types.map(typeItem =>\r\n                            <ListGroup.Item key={typeItem.id} className='d-flex flex-column'>\r\n                                <div>\r\n                                    id: {typeItem.id}\r\n                                </div>\r\n                                <div>\r\n                                    type: {typeItem.type}\r\n                                </div>\r\n                                <AkuToggleBtn\r\n                                    clickHandler={() => addToShop(typeItem)}\r\n\r\n                                    btnName='Добавить на главную'\r\n                                    props={{\r\n                                        id: typeItem.id,\r\n                                        checked: checked\r\n                                    }}\r\n                                >\r\n\r\n                                </AkuToggleBtn>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    className=\"mt-1\"\r\n                                    variant={\"outline-secondary\"}\r\n                                    onClick={() => history.push(OKNO_ROUTE + '/' + typeItem.id)}\r\n                                >Открыть\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"mt-1\"\r\n                                    variant={\"outline-danger\"}\r\n                                    onClick={() => deleteHandler(typeItem.id)}\r\n                                >Удалить тип\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </Container >\r\n    );\r\n})\r\n\r\nexport default DBPage;\r\n","import Admin from \"./pages/Admin\"\r\nimport Auth from \"./pages/Auth\"\r\nimport Basket from \"./pages/Basket\"\r\nimport Shop from \"./pages/Shop\"\r\nimport Login from \"./pages/Login\"\r\nimport { ADMIN_ROUTE, SHOP_ROUTE, BASKET_ROUTE, AUTH_ROUTE, LOGIN_ROUTE, REG_ROUTE, OKNO_ROUTE, OKTYPE_ROUTE, DB_ROUTE } from \"./utils/consts\"\r\nimport OknoPage from \"./pages/OknoPage\"\r\nimport Types from \"./pages/Types\"\r\nimport DBPage from \"./pages/DBPage\"\r\n\r\nexport const authRoutes = [\r\n\r\n]\r\nexport const publicRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n    {\r\n        path: DB_ROUTE,\r\n        Component: DBPage\r\n    },\r\n    {\r\n        path: BASKET_ROUTE,\r\n        Component: Basket\r\n    },\r\n    {\r\n        path: SHOP_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: AUTH_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: REG_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: OKNO_ROUTE,\r\n        Component: OknoPage\r\n    },\r\n    {\r\n        path: OKNO_ROUTE + '/:id',\r\n        Component: OknoPage\r\n    },\r\n    {\r\n        path: OKTYPE_ROUTE,\r\n        Component: Types\r\n    },\r\n]\r\n","import React, { useContext } from 'react'\r\nimport { Route, Switch, NavLink, Link, Redirect } from 'react-router-dom'\r\nimport { Context } from \"../index\"\r\nimport { authRoutes, publicRoutes } from \"../routes\"\r\nimport { SHOP_ROUTE } from \"../utils/consts\"\r\n\r\nconst AppRouter = () => {\r\n    const { user } = useContext(Context)\r\n    return (\r\n        <Switch>\r\n\r\n            { user.isAuth && authRoutes.map(({ path, Component }) =>\r\n                <Route path={ path }\r\n                    component={ Component }\r\n                    key={ path }\r\n                    exact\r\n                />\r\n            ) }\r\n            { publicRoutes.map(({ path, Component }) =>\r\n                <Route path={ path }\r\n                    component={ Component }\r\n                    key={ path }\r\n                    exact\r\n                />\r\n            ) }\r\n            <Redirect to={ SHOP_ROUTE } />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React, { useContext, useState, useEffect } from 'react';\r\nimport NavbarBT from \"./Components/navbar/NavbarBTS.js\";\r\nimport './styles/app.css'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRouter from \"./Components/AppRouter\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \".\";\r\nimport { check } from './http/userAPI'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst App = observer(() => {\r\n    const { user } = useContext(Context)\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // check().then(data => {\r\n        user.setUser(true)\r\n        user.setIsAuth(true)\r\n        return setLoading(false)\r\n\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"grow\"} />\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavbarBT />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n})\r\n\r\nexport default App","import { makeAutoObservable } from 'mobx'\r\n\r\n\r\nexport default class OgoStore {\r\n    constructor () {\r\n        this._types = []\r\n        this._amount = [\r\n            { id: 1, type: \"OK1\", count: 5 },\r\n            { id: 2, type: \"OK2\", count: 5 },\r\n            { id: 3, type: \"OK3\", count: 5 },\r\n\r\n        ]\r\n        this._shop = []\r\n        this._type = {}\r\n        this._selectedType = {}\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n    setType(type) {\r\n        this._type = type\r\n    }\r\n    setShop(type) {\r\n        this._shop = type\r\n    }\r\n    setAmount(amount) {\r\n        this._amount = amount\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get type() {\r\n        return this._type\r\n    }\r\n    get amount() {\r\n        return this._amount\r\n    }\r\n    get shop() {\r\n        return this._shop\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this._selectedType = type\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n\r\n\r\n}","import { makeAutoObservable } from 'mobx'\r\nimport { Context } from '..';\r\nimport { useContext } from 'react';\r\n\r\n\r\nexport default class UserStore {\r\n    constructor () {\r\n        this._isAuth = true\r\n        this._user = {}\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool\r\n    }\r\n    setUser(user) {\r\n        this._user = user\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth\r\n    }\r\n\r\n    get user() {\r\n        return this._user\r\n    }\r\n}","import React, { createContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport OgoStore from \"./store/OgoStore\";\r\nimport UserStore from \"./store/UserStore\";\r\n\r\nexport const Context = createContext(null)\r\n\r\nReactDOM.render(\r\n    <Context.Provider value={ {\r\n        user: new UserStore(),\r\n        ogo: new OgoStore()\r\n    } }>\r\n        <App />\r\n    </Context.Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}